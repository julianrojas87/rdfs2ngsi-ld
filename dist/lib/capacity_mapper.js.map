{"version":3,"file":"capacity_mapper.js","sourceRoot":"","sources":["../../lib/capacity_mapper.ts"],"names":[],"mappings":";;;AAAA,oEAAoE;AACpE,oGAAoG;AAC7F,MAAM,WAAW,GAAG,CAAC,WAAkB,EAAS,EAAE;;IACvD,+CAA+C;IAC/C,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAC9B,CAAC,GAAG,EAAE,EAAE,CACN,GAAG,CAAC,MAAM,CAAC;QACX,kEAAkE,CACrE,CAAC;IACF,IAAI,CAAC,OAAO,EAAE;QACZ,0BAA0B;QAC1B,OAAO,WAAW,CAAC;KACpB;IACD,2CAA2C;IAC3C,MAAM,UAAU,GACd,MAAA,OAAO,CACL,qEAAqE,CACtE,0CAAE,MAAM,CAAC;IACZ,IAAI,CAAC,UAAU,EAAE;QACf,0BAA0B;QAC1B,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC,CAAC;IACrE,IAAI,CAAC,QAAQ,EAAE;QACb,0BAA0B;QAC1B,OAAO,WAAW,CAAC;KACpB;IAED,MAAM,gBAAgB,GAAG;QACvB,MAAM,EAAE,UAAU;QAClB,OAAO,EAAE;YACP,MAAM,EAAE,qDAAqD;YAC7D,2DAA2D,EACzD,QAAQ,CAAC,2DAA2D,CAAC;YACvE,YAAY,EAAE,QAAQ,CAAC,YAAY,CAAC;SACrC;QACD,YAAY,EAAE,QAAQ,CAAC,YAAY,CAAC;KACrC,CAAC;IAEF,IAAI,CAAC,gBAAgB,EAAE;QACrB,0BAA0B;QAC1B,OAAO,WAAW,CAAC;KACpB;IAED,+CAA+C;IAC/C,OAAO,CACL,qEAAqE,CACtE,qBAAQ,gBAAgB,CAAE,CAAC;IAE5B,4CAA4C;IAC5C,OAAO,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC,CAAC;AAC/D,CAAC,CAAC;AAlDW,QAAA,WAAW,eAkDtB","sourcesContent":["// Adapts the output in order to override how capacity is presented.\n// Certain integrations are limited to using capacity as a direct property of BycicleParkingStation.\nexport const mapCapacity = (rootObjects: any[]): any[] => {\n  // find the root (BycicleParkingStation) object\n  const station = rootObjects.find(\n    (obj) =>\n      obj[\"type\"] ===\n      \"https://smartdatamodels.org/dataModel.OSLO/BicycleParkingStation\"\n  );\n  if (!station) {\n    // oups, nothing we can do\n    return rootObjects;\n  }\n  // find the id of the capacity relationship\n  const capacityId =\n    station[\n      \"https://smartdatamodels.org/dataModel.OSLO/ParkingFacility.capacity\"\n    ]?.object;\n  if (!capacityId) {\n    // oups, nothing we can do\n    return rootObjects;\n  }\n\n  const capacity = rootObjects.find((obj) => obj[\"id\"] === capacityId);\n  if (!capacity) {\n    // oups, nothing we can do\n    return rootObjects;\n  }\n\n  const capacityProperty = {\n    \"type\": \"Property\",\n    \"value\": {\n      \"type\": \"https://smartdatamodels.org/dataModel.OSLO/Capacity\",\n      \"https://smartdatamodels.org/dataModel.OSLO/Capacity.total\":\n        capacity[\"https://smartdatamodels.org/dataModel.OSLO/Capacity.total\"],\n      \"observedAt\": capacity[\"observedAt\"]\n    },\n    \"observedAt\": capacity[\"observedAt\"]\n  };\n\n  if (!capacityProperty) {\n    // oups, nothing we can do\n    return rootObjects;\n  }\n\n  // replace the relationshiop in the root object\n  station[\n    \"https://smartdatamodels.org/dataModel.OSLO/ParkingFacility.capacity\"\n  ] = { ...capacityProperty };\n\n  // return all members excluding the capacity\n  return rootObjects.filter((obj) => obj[\"id\"] !== capacityId);\n};\n"]}